apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.hidetake.ssh'

mainClassName = driverClass

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.3'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://dl.bintray.com/jw3/maven" }
}

dependencies {
    compile 'com.pi4j:pi4j-core:1.0'
    compile 'com.typesafe.akka:akka-actor_2.11:2.3.10'
    compile 'com.typesafe.akka:akka-testkit_2.11:2.3.10'

    testCompile 'org.scalatest:scalatest_2.11:2.2.5'
    testCompile 'org.scalamock:scalamock-scalatest-support_2.11:3.2.2'

    compile 'com.typesafe.scala-logging:scala-logging_2.11:3.1.0'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    runtime 'com.typesafe.akka:akka-slf4j_2.11:2.3.10'

    compile 'com.typesafe:config:1.3.0'
    compile 'net.ceedubs:ficus_2.11:1.1.2'

    compile 'org.openrdf.sesame:sesame-model:4.0.0-M1'
    compile 'org.openrdf.sesame:sesame-repository-api:4.0.0-M1'
    compile 'org.openrdf.sesame:sesame-sail-memory:4.0.0-M1'
    compile 'org.openrdf.sesame:sesame-repository-sail:4.0.0-M1'

    compile 'io.airlift:airline:0.7'

    compile 'gpio4s:gpiocfg_2.11:0.1'
}

ssh.settings {
    dryRun = true
}

remotes {
    def remoteUsername = 'pi'
    def remotePassword = 'raspberry'

    master {
        role 'master'
        host = '192.168.0.12'
        user = remoteUsername
        password = remotePassword
    }
    worker01 {
        role 'worker'
        host = '192.168.0.13'
        user = remoteUsername
        password = remotePassword
    }
}

task prepareScripts(type: Copy) {
    from 'gradle/scripts'
    into buildDir
    expand project.properties
    eachFile { println("\t- ${it.name}") }
}

task deploy(group: 'distribution', dependsOn: [clean, distTar, prepareScripts]) {
    def dist = "$buildDir/distributions/${distributions.main.baseName}.tar"

    ssh.run {
        session(remotes.role('worker')) { r ->
            put dist, copyArchivesTo
            put "$buildDir/deploy-distribution", '/usr/local/bin'
            execute 'deploy-distribution'
        }
    }
}
